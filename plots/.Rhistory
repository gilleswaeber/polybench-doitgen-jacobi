library(here)
library(ggplot2)
setwd(here())
current_path <- here()
print(paste("current path = ", current_path))
set_here(path='..')
parent_path <- here()
doitgen_benchmark_binary_path <- paste(parent_path, "/build/doitgen/benchmark/", sep="")
path_from_here_to_R <- paste(here(), "/R/", sep="")
print(paste("current path = ", current_path))
print(paste("parent path = ", parent_path))
print(paste("R path = ", path_from_here_to_R))
print(paste("doitgen benchmark path = ", doitgen_benchmark_binary_path ))
source(paste(path_from_here_to_R, "utils.R", sep=""))
source(paste(path_from_here_to_R, "stats.R", sep=""))
source(paste(path_from_here_to_R, "aes.R", sep=""))
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path=doitgen_benchmark_binary_path, col=c("benchmark", "nr", "nq", "np", "rank", "id", "time", "overhead"))
source(paste(path_from_here_to_R, "lsbpp_fun.R", sep=""))
source(paste(path_from_here_to_R, "lsbpp_fun.R", sep=""))
library(here)
library(ggplot2)
setwd(here())
current_path <- here()
clelibrary(here)
library(here)
library(ggplot2)
setwd(here())
current_path <- here()
print(paste("current path = ", current_path))
set_here(path='..')
parent_path <- here()
doitgen_benchmark_binary_path <- paste(parent_path, "/build/doitgen/benchmark/", sep="")
library(here)
library(ggplot2)
setwd(here())
current_path <- "/home/quentin/Desktop/dphpc-project/plots" #here()
print(paste("current path = ", current_path))
set_here(path='..')
parent_path <- "/home/quentin/Desktop/dphpc-project" #here()
library(here)
library(ggplot2)
#setwd(here())
current_path <- "/home/quentin/Desktop/dphpc-project/plots" #here()
setwd("/home/quentin/Desktop/dphpc-project/plots")
print(paste("current path = ", current_path))
parent_path <- "/home/quentin/Desktop/dphpc-project" #here()
doitgen_benchmark_binary_path <- paste(parent_path, "/build/doitgen/benchmark/", sep="")
#path_from_here_to_R <- paste(here(), "/R/", sep="")
path_from_here_to_R <- paste(parent_path, "/R/", sep="")
print(paste("current path = ", current_path))
print(paste("parent path = ", parent_path))
print(paste("R path = ", path_from_here_to_R))
print(paste("doitgen benchmark path = ", doitgen_benchmark_binary_path ))
source(paste(path_from_here_to_R, "utils.R", sep=""))
source(paste(path_from_here_to_R, "stats.R", sep=""))
source(paste(path_from_here_to_R, "aes.R", sep=""))
source(paste(path_from_here_to_R, "lsbpp_fun.R", sep=""))
library(here)
library(ggplot2)
#setwd(here())
current_path <- "/home/quentin/Desktop/dphpc-project/plots" #here()
setwd("/home/quentin/Desktop/dphpc-project/plots")
print(paste("current path = ", current_path))
parent_path <- "/home/quentin/Desktop/dphpc-project" #here()
doitgen_benchmark_binary_path <- paste(parent_path, "/build/doitgen/benchmark/", sep="")
#path_from_here_to_R <- paste(here(), "/R/", sep="")
path_from_here_to_R <- paste(parent_path, "/R/", sep="")
print(paste("current path = ", current_path))
print(paste("parent path = ", parent_path))
print(paste("R path = ", path_from_here_to_R))
print(paste("doitgen benchmark path = ", doitgen_benchmark_binary_path ))
source(paste(path_from_here_to_R, "utils.R", sep=""))
source(paste(path_from_here_to_R, "stats.R", sep=""))
source(paste(path_from_here_to_R, "aes.R", sep=""))
source(paste(path_from_here_to_R, "lsbpp_fun.R", sep=""))
source(paste(path_from_here_to_R, "lsbpp_fun.R", sep=""))
library(quantreg)
library(ggplot2)
library(docopt)
print("opened the file with functions")
source("utils.R")
parent_path <- "/home/quentin/Desktop/dphpc-project"
path_from_here_to_R <- paste(parent_path, "/R/", sep="")
source(paste(path_from_here_to_R, "utils.R", sep=""))
source(paste(path_from_here_to_R, "stats.R", sep=""))
source(paste(path_from_here_to_R, "aes.R", sep=""))
#Load the data from the 'dir' folder applying the filter specified by 'expr'
loaddata <- function(dir, expr){
data_unfolded <- ReadAllFilesInDir.Aggregate(dir.path=dir)
if (!is.null(expr)) data_unfolded = subset(data_unfolded, eval(parse(text=expr)))
return(data_unfolded)
}
#Shapiro-Wilk normality test
lsb_shapiro <- function(data, col){
sampled <- as.numeric(data[[col]])
#shapiro.test takes min 3 val
if (length(sampled)<3) {
print("The dataset contains too few rows (min. 3 are required)")
return()
}
#shapiro.test takes max 5000 vals
if (length(sampled)>5000) sampled <- sample(sampled, 5000)
shapiro.test(sampled)
}
#ANOVA test
lsb_anova <- function(data, xcol, ycol){
res <- aov(eval(parse(text=ycol)) ~ eval(parse(text=xcol)), data=data)
print(res)
summary(res)
}
#Kruskalâ€“Wallis one-way analysis of variance
lsb_kruskal <- function(data, xcol, ycol){
kruskal.test(eval(parse(text=ycol))~eval(parse(text=xcol)), data=data)
}
#Histogram + density plot
lsb_histo_density <- function(data, col, xlbl){
str <- paste("mean(", col, ")")
plot <- Create.Plot.HistoDensity(data, aes_string(col), aes_string(xintercept=str),,, xlbl, "Density")
return(plot)
}
#Density plot
lsb_density <- function(data, col, xlbl){
str <- paste("mean(", col, ")")
plot <- Create.GGPlot.Density(data, aes_string(col), data, aes_string(xintercept=str),,, xlbl, "Density")
return(plot)
}
#QQ-plot
lsb_qqplot <- function(data, col){
plot <- CreateQQPlot(data, col)
return(plot)
}
#Box Plot
lsb_boxplot <- function(d, cols, xlbl, ylbl){
plot <- CreateBoxPlot(d,, cols , cols,, "", xlbl, ylbl)
return(plot)
}
#Violin Plot
lsb_violinplot <- function(d, cols, xlbl, ylbl){
plot <- Create.Plot.Violin(d,, cols , cols, "", xlbl, ylbl)
return(plot)
}
#log-normalization on data[datacol]
lsb_lognormalize <- function(data, datacol){
val <- data[[datacol]]
val <- log(val)
val <- data.frame(matrix(unlist(val),ncol=1) )
data[]
names(val) <- datacol
return(val)
}
#k-normalization on data[datacol]
lsb_knormalize <- function(data, datacol, k=1){
var <- data[[datacol]]
max <- k
x <- seq_along(var)
d1 <- split(var, ceiling(x/max))
df <- numeric(length(d1))
i <- 1
for(chunk in d1){
len <- length(chunk)
s<-sum(chunk)
df[i] <- s / len
i = i +1
}
df <- data.frame(matrix(unlist(df),ncol=1) )
#data[[datacol]] <- unlist(df)
names(df) <- datacol
return(df)
}
#Quantile Regression Plot between data1[col1] and data2[col2]
lsb_qr <- function(data1, col1, data2, col2){
library(quantreg)
data_merged = data.frame(data1[[col1]], data2[[col2]])
colnames(data_merged) <- c("a", "b")
pdf(file="out.pdf")
plot(summary(rq(a~b,tau = 1:49/50,data=data_merged)))
}
library(here)
library(ggplot2)
#setwd(here())
current_path <- "/home/quentin/Desktop/dphpc-project/plots" #here()
setwd("/home/quentin/Desktop/dphpc-project/plots")
print(paste("current path = ", current_path))
parent_path <- "/home/quentin/Desktop/dphpc-project" #here()
doitgen_benchmark_binary_path <- paste(parent_path, "/build/doitgen/benchmark/", sep="")
#path_from_here_to_R <- paste(here(), "/R/", sep="")
path_from_here_to_R <- paste(parent_path, "/R/", sep="")
print(paste("current path = ", current_path))
print(paste("parent path = ", parent_path))
print(paste("R path = ", path_from_here_to_R))
print(paste("doitgen benchmark path = ", doitgen_benchmark_binary_path ))
source(paste(path_from_here_to_R, "utils.R", sep=""))
source(paste(path_from_here_to_R, "stats.R", sep=""))
source(paste(path_from_here_to_R, "aes.R", sep=""))
source(paste(path_from_here_to_R, "lsbpp_fun.R", sep=""))
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path=doitgen_benchmark_binary_path, col=c("benchmark", "nr", "nq", "np", "rank", "id", "time", "overhead"))
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path=doitgen_benchmark_binary_path, col=c("simple", "nr", "nq", "np", "rank", "id", "time", "overhead"))
#Load databenchmark doitgen mpi         rank           nr           nq           np         runs       id         time     overhead
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path=doitgen_benchmark_binary_path, col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
#Load databenchmark doitgen mpi         rank           nr           nq           np         runs       id         time     overhead
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/lsb.doitgen mpi benchmark.r0", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
#Load databenchmark doitgen mpi         rank           nr           nq           np         runs       id         time     overhead
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/lsb.doitgen mpi benchmark.r0", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
#Load databenchmark doitgen mpi         rank           nr           nq           np         runs       id         time     overhead
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/lsb.doitgen mpi benchmark.r0", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
View(na_legend_text)
View(na_mbench_plot_x_trans)
View(na_mbench_plot_y_trans)
#Load databenchmark doitgen mpi         rank           nr           nq           np         runs       id         time     overhead
data.bh_study <- ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/lsb.doitgen mpi benchmark.r0", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark", "type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
data.bh_study <- ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/lsb.doitgen mpi benchmark.r0", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
data.bh_study <- ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
source(paste(path_from_here_to_R, "stats.R", sep=""))
all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/")
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
ReadAllRiInDir.AggregateDN <- function(dir.path=NA, col=NA, del.num=1){
dir.files <- list.files(path=dir.path)
table <- NULL
for(file in dir.files){
file.path <- paste( dir.path, file , sep="")
in.table <- read.table( file.path , header=TRUE, col.names=col)
in.table <- in.table[-(del.num),]
rownames(in.table) <- NULL
table <- rbind(table, in.table)
}
return(table)
}
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
ReadAllRiInDir.Aggregate <- function(dir.path=NA, col=NA, del.num=1){
dir.files <- list.files(path=dir.path)
table <- NULL
for(file in dir.files){
file.path <- paste( dir.path, file , sep="")
in.table <- read.table( file.path , header=TRUE, col.names=col)
in.table <- in.table[-(del.num),]
rownames(in.table) <- NULL
table <- rbind(table, in.table)
}
return(table)
}
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
#all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", pattern=".r0")
#all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", pattern=".r*")
#all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", pattern=".r*")
#all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", pattern="*.r*")
#all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", pattern="*.r*")
#all_files <- ReadAllFilesInDir.List(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
dir.files <- list.files(path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data")
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
View(data.bh_study)
View(data.bh_study)
View(data.bh_study)
View(data.bh_study)
View(data.bh_study)
ReadAllRiInDir.Aggregate <- function(dir.path=NA, col=NA, del.num=1){
dir.files <- list.files(path=dir.path)
table <- NULL
for(file in dir.files){
file.path <- paste( dir.path, file , sep="")
in.table <- read.table( file.path , header=TRUE, col.names=col)
in.table <- in.table[-(del.num),]
rownames(in.table) <- NULL
table <- rbind(table, in.table)
}
return(table)
}
ReadAllRiInDir <- function(dir.path=NA, col=NA, del.num=1){
dir.files <- list.files(path=dir.path)
table <- NULL
for(file in dir.files){
file.path <- paste( dir.path, file , sep="")
in.table <- read.table( file.path , header=TRUE, col.names=col)
in.table <- in.table[-(del.num),]
rownames(in.table) <- NULL
table <- rbind(table, in.table)
}
return(table)
}
#.Aggregate
data.bh_study <- ReadAllRiInDir(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
#re.bh_study <- CalculateDataSummary(data=data.bh_study, measurevar="time", groupvars=c("type", #htsize", "memsize", "csize"), conf.interval=.95, quantile.interval=.95)
re.bh_study <- CalculateDataSummary(data=data.bh_study, measurevar="time", groupvars=c("benchmark", "NR", "NQ", "NP", "threads"), conf.interval=.95, quantile.interval=.95)
#.Aggregate
data.bh_study <- ReadAllRiInDir(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
View(data.bh_study)
#.Aggregate
data.bh_study <- ReadAllRiInDir(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("benchmark_type", "rank", "nr", "nq", "np", "runs", "id", "time", "overhead"))
View(data.bh_study)
View(na_legend_text)
View(data.bh_study)
#.Aggregate
data.bh_study <- ReadAllRiInDir(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("rank", "benchmark_type", "nr", "nq", "np", "runs", "id", "time", "overhead"))
View(data.bh_study)
#.Aggregate
data.bh_study <- ReadAllRiInDir(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("rank", "benchmark_type", "nr", "nq", "np", "runs", "processes", "id", "time", "overhead"))
View(data.bh_study)
#.Aggregate
data.bh_study <- ReadAllRiInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("rank", "benchmark_type", "nr", "nq", "np", "runs", "processes", "id", "time", "overhead"))
View(data.bh_study)
#.Aggregate
data.bh_study <- ReadAllFilesInDir.Aggregate(dir.path="/home/quentin/Desktop/dphpc-project/build/doitgen/benchmark/data/", col=c("rank", "benchmark_type", "nr", "nq", "np", "runs", "processes", "id", "time", "overhead"))
View(data.bh_study)
re.bh_study <- CalculateDataSummary(data=data.bh_study, measurevar="time", groupvars=c("rank", "benchmark_type", "nr", "nq", "np", "runs", "processes"), conf.interval=.95, quantile.interval=.95)
#re.bh_study <- CalculateDataSummary(data=data.bh_study, measurevar="time", groupvars=c("rank", "benchmark_type", "nr", "nq", "np", "runs", "processes"), conf.interval=.95, quantile.interval=.95)
test <- group_by("rank", "benchmark_type", "nr", "nq", "np", "runs", "processes")
library("tidyverse")
library(tidyverse)
library(tidyverse)
library("tidyverse")
