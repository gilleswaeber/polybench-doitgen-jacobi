library(here)
library(ggplot2)
setwd(here())
current_path <- here()
print(paste("current path = ", current_path))
set_here(path='..')
parent_path <- here()
doitgen_benchmark_binary_path <- paste(parent_path, "/build/doitgen/benchmark/", sep="")
path_from_here_to_R <- paste(here(), "/R/", sep="")
print(paste("current path = ", current_path))
print(paste("parent path = ", parent_path))
print(paste("R path = ", path_from_here_to_R))
print(paste("doitgen benchmark path = ", doitgen_benchmark_binary_path ))
source(paste(path_from_here_to_R, "utils.R", sep=""))
source(paste(path_from_here_to_R, "stats.R", sep=""))
source(paste(path_from_here_to_R, "aes.R", sep=""))
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc-project/R")
source("utils.R")
source("stats.R")
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
View(data.bh_study)
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
View(init_summary)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
View(kernel_data)
ggplot(data=init_summary, aes(x = num_processes, y = median/1000, ymin=CI.NNorm.high/1000, ymax=CI.NNorm.low/1000)) +
scale_y_continuous(name="Time (ms)") +
scale_x_continuous(name="processes", breaks=init_summary$num_processes) +
geom_point() +
geom_line(aes(col=benchmark_type), size=1.5) +
geom_errorbar()
ggplot(data=write_data, aes(x = factor(num_processes), y = time/1000)) +
scale_y_continuous(name="Time (ms)", trans="log10") +
facet_wrap(~benchmark_type) +
geom_violin()
ggplot(data=write_data, aes(x = factor(num_processes), y = time/1000)) +
scale_y_continuous(name="Time (ms)", trans="log10") +
facet_wrap(~benchmark_type) +
geom_violin() + labs(title="Area Vs Population", subtitle="From midwest dataset", y="Population", x="Area", caption="Midwest Demographics")
ggplot(data=write_data, aes(x = factor(num_processes), y = time/1000)) +
scale_y_continuous(name="Time (ms)", trans="log10") +
facet_wrap(~benchmark_type) +
geom_violin() + labs(title="IO runtime of A slice", y="time [ms]", x="processes")
ggplot(data=write_data, aes(x = factor(num_processes), y = time/1000)) +
scale_y_continuous(name="Time (ms)", trans="log10") +
facet_wrap(~benchmark_type) +
geom_violin() + labs(title="IO runtime of a single A slice for each process", y="time [ms]", x="processes")
write.table(init_summary, file = "summary_init.txt", sep = ",", quote = FALSE, row.names = F)
m <- read.table("summary_init.txt",
header = FALSE)
View(m)
m <- read.table("summary_init.txt",
header = TRUE)
View(m)
write.table(init_summary, file = "summary_init.txt", sep = "\t", quote = FALSE, row.names = F)
m <- read.table("summary_init.txt",
header = TRUE)
View(m)
View(m)
View(init_summary)
View(m)
View(init_summary)
View(m)
View(init_summary)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc-project/R")
source("utils.R")
source("stats.R")
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "init_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(kernel_summary, file = "kernel_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(write_data, file = "io_summary.txt", sep = "\t", quote = FALSE, row.names = F)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc-project/R")
source("utils.R")
source("stats.R")
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "init_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(kernel_summary, file = "kernel_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(total_summary, file = "overall_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(write_data, file = "io_summary.txt", sep = "\t", quote = FALSE, row.names = F)
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "init_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(kernel_summary, file = "kernel_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(total_summary, file = "overall_summary.txt", sep = "\t", quote = FALSE, row.names = F)
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
View(result_data)
View(data_group)
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
View(result_data)
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
View(data_group)
View(data_group)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc-project/R")
source("utils.R")
source("stats.R")
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "summary_init.txt", sep = "\t", quote = FALSE, row.names = F)
m <- read.table("summary_init.txt",
header = TRUE)
ggplot(data=init_summary, aes(x = num_processes, y = median/1000, ymin=CI.NNorm.high/1000, ymax=CI.NNorm.low/1000)) +
scale_y_continuous(name="Time (ms)") +
scale_x_continuous(name="processes", breaks=init_summary$num_processes) +
geom_point() +
geom_line(aes(col=benchmark_type), size=1.5) +
geom_errorbar()
ggplot(data=write_data, aes(x = factor(num_processes), y = time/1000)) +
scale_y_continuous(name="Time (ms)", trans="log10") +
facet_wrap(~benchmark_type) +
geom_violin() + labs(title="IO runtime of a single A slice for each process", y="time [ms]", x="processes")
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
View(data_group)
View(result_data)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE, c("NR", "NQ", "NP", "num_processes", "benchmark_type") ))
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE, groups=c("NR", "NQ", "NP", "num_processes", "benchmark_type") ))
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE, keepcolnames=FALSE))
View(result_data)
result_data <-data_group %>% summarise(total = sum(time, na.rm = TRUE, keepcolnames=TRUE))
View(result_data)
ok <- data_group %>%
summarise(across(everything(), sum))
result_data <- data_group %>% dplyr::summarise(total = sum(time, na.rm=TRUE))
View(result_data)
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
ggplot(data=total_summary, aes(x = num_processes, y = median/1000, ymin=CI.NNorm.high/1000, ymax=CI.NNorm.low/1000)) +
scale_y_continuous(name="time [ms]") +
scale_x_continuous(name="processes", breaks=init_summary$num_processes) +
geom_point() +
geom_line(aes(col=benchmark_type), size=1.5) +
geom_errorbar()
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% dplyr::summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "init_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(kernel_summary, file = "kernel_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(total_summary, file = "overall_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(write_data, file = "io_summary.txt", sep = "\t", quote = FALSE, row.names = F)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc-project/R")
source("utils.R")
source("stats.R")
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% dplyr::summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "init_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(kernel_summary, file = "kernel_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(total_summary, file = "overall_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(write_data, file = "io_summary.txt", sep = "\t", quote = FALSE, row.names = F)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc_data")
source("utils.R")
source("stats.R")
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc_data")
source("lib/utils.R")
source("lib/stats.R")
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% dplyr::summarise(total = sum(time, na.rm = TRUE))
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc_data")
source("lib/utils.R")
source("lib/stats.R")
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data/test/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
init_data <- subset(data.bh_study, id == 0 & benchmark_type != "sequential")
kernel_data <- subset(data.bh_study, id == 1)
write_data <- subset(data.bh_study, id == 2)
init_summary <- CalculateDataSummary(data=init_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
kernel_summary <- CalculateDataSummary(data=kernel_data, measurevar="time", groupvars=c("NR", "NQ", "NP", "num_processes", "id"), conf.interval=.95, quantile.interval=.95)
data_group <- data.bh_study %>% group_by(NR, NQ, NP, num_processes, run_index, benchmark_type)
result_data <-data_group %>% dplyr::summarise(total = sum(time, na.rm = TRUE))
total_summary <- CalculateDataSummary(data=result_data, measurevar="total", groupvars=c("NR", "NQ", "NP", "num_processes", "benchmark_type"), conf.interval=.95, quantile.interval=.95)
write.table(init_summary, file = "summaries/init_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(kernel_summary, file = "summaries/kernel_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(total_summary, file = "summaries/overall_summary.txt", sep = "\t", quote = FALSE, row.names = F)
write.table(write_data, file = "summaries/io_summary.txt", sep = "\t", quote = FALSE, row.names = F)
library(ggplot2)
library(dplyr)
setwd("/home/quentin/Desktop/dphpc-project/R")
source("utils.R")
source("stats.R")
#Load data
data.bh_study <-  ReadAllFilesInDir.Aggregate(dir.path="data2/", col=c("NR", "NQ", "NP", "num_processes", "run_index", "benchmark_type", "processor_model", "id", "time", "overhead"))
source("lib/utils.R")
source("lib/stats.R")
